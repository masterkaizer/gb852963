{"version":3,"sources":["components/Search.jsx","components/Saved.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchComp","props","view","link","window","open","saveBook","title","author","desc","img","obj","authors","description","image","thumbnail","console","log","Axios","post","then","res","snack","err","state","query","items","search","bind","handleChange","handleKeyPress","event","key","this","fetch","method","response","json","setState","target","value","FormControl","variant","style","marginTop","width","InputLabel","htmlFor","OutlinedInput","onChange","onKeyPress","endAdornment","InputAdornment","position","IconButton","edge","onClick","labelWidth","map","item","i","volumeInfo","imageLinks","infoLink","Card","margin","CardContent","Grid","container","spacing","xs","name","Button","float","color","marginRight","src","undefined","alt","className","React","Component","SaveComp","delete","id","data","getBooks","get","_id","Alert","elevation","Home","saved","save","showSnack","msg","snackSeverity","openSnack","snackMessage","severity","hideSnack","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","AppBar","Toolbar","aria-label","Typography","marginLeft","textAlign","padding","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faa9a1b0.chunk.js","sourcesContent":["import React from 'react';\nimport Search from '@material-ui/icons/Search';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Axios from 'axios';\n\nexport default class SearchComp extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: '',\n            items: []\n\n        };\n        this.search = this.search.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n\n    handleKeyPress(event) {\n        if (event.key === 'Enter')\n            this.search();\n\n    }\n\n    search() {\n        let query = this.state.query;\n        const BASE_URL = \"https://www.googleapis.com/books/v1/volumes?q=\" + query;\n        fetch(BASE_URL, { method: \"GET\" })\n            .then(response => response.json())\n            .then(json => {\n                let { items } = json;\n                this.setState({\n                    items: items\n                })\n\n            })\n        console.log(\"clicked on search  button\", this.state.query);\n    }\n    handleChange(event) {\n        this.setState({\n            query: event.target.value\n        })\n    }\n\n    view = (link) => {\n        window.open(link)\n    }\n\n\n    saveBook = (title, author, desc, img, link) => {\n        let obj = {\n            title: title,\n            authors: author,\n            description: desc,\n            image: img.thumbnail,\n            link: link\n        }\n\n        console.log(obj)\n        Axios.post('http://localhost:5000/api/books', obj).then(\n            res => {\n                console.log(res)\n                this.props.snack('Book saved successfully', 'success')\n            },\n            err => {\n                console.log(err)\n            }\n        )\n    }\n    render() {\n        return (\n            <>\n                <FormControl variant=\"outlined\" style={{ marginTop: '30px', width: '100%' }}>\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Search</InputLabel>\n                    <OutlinedInput\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    edge=\"end\"\n                                    onClick={this.search}\n                                >\n                                    <Search />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        labelWidth={70}\n                    />\n                </FormControl>\n\n                <div>\n                    {this.state.items ?\n                        this.state.items.map((item, i) => {\n                            let { title, imageLinks, infoLink, authors, description } = item.volumeInfo\n                            return (\n                                <Card style={{ margin: '15px 0' }}>\n                                    <CardContent>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={8}>\n                                                <h3>{title}</h3>\n                                                {authors ? <p>\n                                                    Written By &ens;\n                                                    {authors.map(name => {\n                                                        return (\n                                                            <span>{name},&ens;</span>\n                                                        )\n                                                    })}\n                                                </p> : null}\n                                            </Grid>\n                                            <Grid item xs={4}>\n                                                <Button variant=\"outlined\"\n                                                    style={{ float: 'right' }}\n                                                    onClick={() => { this.view(infoLink) }}\n                                                    color=\"secondary\">\n                                                    View\n                                        </Button>\n                                                <Button variant=\"outlined\"\n                                                    style={{ float: 'right', marginRight: '20px' }}\n                                                    onClick={() => { this.saveBook(title, authors, description, imageLinks, infoLink) }}\n                                                    color=\"secondary\">\n                                                    Save\n                                        </Button>\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <img\n                                                    src={imageLinks !== undefined ? imageLinks.thumbnail : ''}\n                                                    alt=\"book\"\n                                                    className=\"bookImage\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={10}>\n                                                <p style={{ marginTop: '0' }}>{description}</p>\n                                            </Grid>\n\n                                        </Grid>\n                                    </CardContent>\n                                </Card>\n\n                            );\n                        })\n                        : null\n                    }</div>\n            </>\n        )\n    }\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Axios from 'axios';\n\nexport default class SaveComp extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            query: '',\n            items: []\n\n        };\n    }\n\n    componentDidMount() {\n        this.getBooks()\n    }\n\n\n    getBooks() {\n\n        Axios.get('http://localhost:5000/api/books').then(\n            res => {\n                console.log(res.data)\n                this.setState({ items: res.data })\n            },\n            err => {\n                console.log(err)\n            }\n        )\n    }\n\n    view = (link) => {\n        window.open(link)\n    }\n\n\n    saveBook = (title, author, desc, img, link) => {\n        let obj = {\n            title: title,\n            authors: author,\n            description: desc,\n            image: img.thumbnail,\n            link: link\n        }\n\n        console.log(obj)\n        Axios.post('http://localhost:5000/api/books', obj).then(\n            res => {\n                console.log(res)\n            },\n            err => {\n                console.log(err)\n            }\n        )\n    }\n\n    delete = (id) => {\n\n        Axios.delete(`http://localhost:5000/api/books/${id}`).then(\n            res => {\n                console.log(res.data)\n                this.props.snack('Book Deleted','error')\n                this.getBooks()\n            },\n            err => {\n                console.log(err)\n            }\n        )\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    {this.state.items ?\n                        this.state.items.map((item, i) => {\n                            let { title, image, link, authors, description, _id } = item\n                            \n                            return (\n                                <Card style={{ margin: '15px 0' }}>\n                                    {/* Cards are surfaces that display content and actions on a single topic.\n\nThey should be easy to scan for relevant and actionable information. Elements, like text and images, \nshould be placed on them in a way that clearly indicates hierarchy. */}\n                                    <CardContent>\n                                    {/* Thanks to search on CSS tricks, I have used: The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.\n                                    The grid system is implemented with the Grid component: It uses CSS’s Flexible Box module for high flexibility.\n                               There are two types of layout: containers and items.\n                                Item widths are set in percentages, so they are always fluid and sized relative to their parent element.\n                           Items have padding to create the spacing between individual items.\n                              There are five grid breakpoints: xs, sm, md, lg, and xl. */}\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={8}>\n                                                <h3>{title}</h3>\n                                                {authors ? <p>\n                                                    Written By &ens;\n                                                    {authors.map(name => {\n                                                        return (\n                                                            <span>{name},&ens;</span>\n                                                        )\n                                                    })}\n                                                </p> : null}\n                                            </Grid>\n                                            <Grid item xs={4}>\n                                                <Button variant=\"outlined\" style={{ float: 'right' }} onClick={() => { this.view(link) }}>\n                                                    View\n                                        </Button>\n                                                <Button variant=\"outlined\"\n                                                    style={{ float: 'right', marginRight: '20px' }}\n                                                    onClick={() => { this.delete(_id) }}>\n                                                    Delete\n                                        </Button>\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <img\n                                                    src={image !== undefined ? image : ''}\n                                                    alt=\"book\"\n                                                    className=\"bookImage\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={10}>\n                                                <p style={{ marginTop: '0' }}>{description}</p>\n                                            </Grid>\n\n                                        </Grid>\n                                    </CardContent>\n                                </Card>\n\n                            );\n                        })\n                        : null\n                    }</div>\n            </>\n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport Search from '../components/Search';\nimport Saved from '../components/Saved';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nexport default class Home extends React.Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            saved: false,\n            search: true,\n            openSnack: false,\n            snackMessage: '',\n            severity: ''\n        }\n    }\n\n    search = () => {\n        this.setState({\n            saved: false,\n            search: true\n        })\n    }\n    save = () => {\n        this.setState({\n            saved: true,\n            search: false\n        })\n    }\n\n    showSnack = (msg, snackSeverity) => {\n        this.setState({\n            openSnack: true,\n            snackMessage: msg ? msg : 'Message not available',\n            severity: snackSeverity ? snackSeverity : 'info'\n        })\n    }\n\n    hideSnack = () => {\n        this.setState({ openSnack: false })\n    }\n\n    render() {\n        return (\n            <>\n                <Snackbar open={this.state.openSnack} autoHideDuration={4000} onClose={this.hideSnack}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n                    <Alert onClose={this.hideSnack} severity={this.state.severity}>\n                        {this.state.snackMessage}\n                    </Alert>\n                </Snackbar>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n\n                        </IconButton>\n                        <Typography  variant=\"h6\">\n                            Google Books\n                    </Typography>\n                        <Button\n                            color=\"inherit\"\n                            onClick={this.search}\n                            style={{ marginLeft: '50px' }}\n                            variant={this.state.search ? 'outlined' : ''}\n                        >\n                            Search\n                        </Button>\n                        <Button\n                            color=\"inherit\"\n                            onClick={this.save}\n                            style={{ marginLeft: '20px' }}\n                            variant={this.state.saved ? 'outlined' : ''}\n                        >\n                            Saved\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n\n                <Card style={{ textAlign: 'center' }}>\n                    <h1>The Google Book Search by Brandon J Sellam</h1> \n                    <h5>Search books and save them.</h5>\n                </Card>\n\n                <div style={{ padding: '20px' }}>\n                    {this.state.search === true ?\n                        <Search snack={this.showSnack} /> : null}\n                    {this.state.saved === true ?\n                        <Saved snack={this.showSnack} />\n\n                        : null}\n                </div>\n            </>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Home from '../src/components/home';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#E91E63',\n    },\n    secondary: {\n      main: '#009688',\n    },\n  },\n});\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Home />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}