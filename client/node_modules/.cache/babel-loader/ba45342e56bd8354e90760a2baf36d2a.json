{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\israe\\\\OneDrive\\\\Bureau\\\\ud\\\\gb852963\\\\client\\\\src\\\\components\\\\Search.jsx\";\nimport React from 'react';\nimport Search from '@material-ui/icons/Search';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Axios from 'axios';\nexport default class SearchComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.view = link => {\n      window.open(link);\n    };\n\n    this.saveBook = (title, author, desc, img, link) => {\n      let obj = {\n        title: title,\n        authors: author,\n        description: desc,\n        image: img.thumbnail,\n        link: link\n      };\n      console.log(obj);\n      Axios.post('http://localhost:5000/api/books', obj).then(res => {\n        console.log(res);\n        this.props.snack('Book saved successfully', 'success');\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      query: '',\n      items: []\n    };\n    this.search = this.search.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  handleKeyPress(event) {\n    if (event.key === 'Enter') this.search();\n  }\n\n  search() {\n    let query = this.state.query;\n    const BASE_URL = \"https://www.googleapis.com/books/v1/volumes?q=\" + query;\n    fetch(BASE_URL, {\n      method: \"GET\"\n    }).then(response => response.json()).then(json => {\n      let {\n        items\n      } = json;\n      this.setState({\n        items: items\n      });\n    });\n    console.log(\"clicked on search  button\", this.state.query);\n  }\n\n  handleChange(event) {\n    this.setState({\n      query: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n      variant: \"outlined\",\n      style: {\n        marginTop: '30px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"outlined-adornment-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n      onChange: this.handleChange,\n      onKeyPress: this.handleKeyPress,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"end\",\n        onClick: this.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }\n      }))),\n      labelWidth: 70,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, this.state.items ? this.state.items.map((item, i) => {\n      let {\n        title,\n        imageLinks,\n        infoLink,\n        authors,\n        description\n      } = item.volumeInfo;\n      return /*#__PURE__*/React.createElement(Card, {\n        style: {\n          margin: '15px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 49\n        }\n      }, title), authors ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 60\n        }\n      }, \"Written By &ens;\", authors.map(name => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 61\n          }\n        }, name, \",&ens;\");\n      })) : null), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          float: 'right'\n        },\n        onClick: () => {\n          this.view(infoLink);\n        },\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 49\n        }\n      }, \"View\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          float: 'right',\n          marginRight: '20px'\n        },\n        onClick: () => {\n          this.saveBook(title, authors, description, imageLinks, infoLink);\n        },\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 49\n        }\n      }, \"Save\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: imageLinks !== undefined ? imageLinks.thumbnail : '',\n        alt: \"book\",\n        className: \"bookImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          marginTop: '0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 49\n        }\n      }, description)))));\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/israe/OneDrive/Bureau/ud/gb852963/client/src/components/Search.jsx"],"names":["React","Search","OutlinedInput","InputLabel","InputAdornment","FormControl","IconButton","Grid","Button","Card","CardContent","Axios","SearchComp","Component","constructor","props","view","link","window","open","saveBook","title","author","desc","img","obj","authors","description","image","thumbnail","console","log","post","then","res","snack","err","state","query","items","search","bind","handleChange","handleKeyPress","event","key","BASE_URL","fetch","method","response","json","setState","target","value","render","marginTop","width","map","item","i","imageLinks","infoLink","volumeInfo","margin","name","float","marginRight","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Search from '@material-ui/icons/Search';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Axios from 'axios';\n\nexport default class SearchComp extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: '',\n            items: []\n\n        };\n        this.search = this.search.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n\n    handleKeyPress(event) {\n        if (event.key === 'Enter')\n            this.search();\n\n    }\n\n    search() {\n        let query = this.state.query;\n        const BASE_URL = \"https://www.googleapis.com/books/v1/volumes?q=\" + query;\n        fetch(BASE_URL, { method: \"GET\" })\n            .then(response => response.json())\n            .then(json => {\n                let { items } = json;\n                this.setState({\n                    items: items\n                })\n\n            })\n        console.log(\"clicked on search  button\", this.state.query);\n    }\n    handleChange(event) {\n        this.setState({\n            query: event.target.value\n        })\n    }\n\n    view = (link) => {\n        window.open(link)\n    }\n\n\n    saveBook = (title, author, desc, img, link) => {\n        let obj = {\n            title: title,\n            authors: author,\n            description: desc,\n            image: img.thumbnail,\n            link: link\n        }\n\n        console.log(obj)\n        Axios.post('http://localhost:5000/api/books', obj).then(\n            res => {\n                console.log(res)\n                this.props.snack('Book saved successfully', 'success')\n            },\n            err => {\n                console.log(err)\n            }\n        )\n    }\n    render() {\n        return (\n            <>\n                <FormControl variant=\"outlined\" style={{ marginTop: '30px', width: '100%' }}>\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Search</InputLabel>\n                    <OutlinedInput\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    edge=\"end\"\n                                    onClick={this.search}\n                                >\n                                    <Search />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        labelWidth={70}\n                    />\n                </FormControl>\n\n                <div>\n                    {this.state.items ?\n                        this.state.items.map((item, i) => {\n                            let { title, imageLinks, infoLink, authors, description } = item.volumeInfo\n                            return (\n                                <Card style={{ margin: '15px 0' }}>\n                                    <CardContent>\n                                        <Grid container spacing={3}>\n                                            <Grid item xs={8}>\n                                                <h3>{title}</h3>\n                                                {authors ? <p>\n                                                    Written By &ens;\n                                                    {authors.map(name => {\n                                                        return (\n                                                            <span>{name},&ens;</span>\n                                                        )\n                                                    })}\n                                                </p> : null}\n                                            </Grid>\n                                            <Grid item xs={4}>\n                                                <Button variant=\"outlined\"\n                                                    style={{ float: 'right' }}\n                                                    onClick={() => { this.view(infoLink) }}\n                                                    color=\"secondary\">\n                                                    View\n                                        </Button>\n                                                <Button variant=\"outlined\"\n                                                    style={{ float: 'right', marginRight: '20px' }}\n                                                    onClick={() => { this.saveBook(title, authors, description, imageLinks, infoLink) }}\n                                                    color=\"secondary\">\n                                                    Save\n                                        </Button>\n                                            </Grid>\n                                            <Grid item xs={2}>\n                                                <img\n                                                    src={imageLinks !== undefined ? imageLinks.thumbnail : ''}\n                                                    alt=\"book\"\n                                                    className=\"bookImage\"\n                                                />\n                                            </Grid>\n                                            <Grid item xs={10}>\n                                                <p style={{ marginTop: '0' }}>{description}</p>\n                                            </Grid>\n\n                                        </Grid>\n                                    </CardContent>\n                                </Card>\n\n                            );\n                        })\n                        : null\n                    }</div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}